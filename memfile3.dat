// ADD R - 1110_000_0100_0_AAAA_DDDD_0000_0000_BBBB
// ADD I - 1110_001_0100_0_AAAA_DDDD_0000_IIII_IIII
// SUB R - 1110_000_0010_0_AAAA_DDDD_0000_0000_BBBB
// SUB I - 1110_001_0010_0_AAAA_DDDD_0000_IIII_IIII
// CMP R - 1110_000_0010_1_AAAA_DDDD_0000_0000_BBBB
// CMP I - 1110_001_0010_1_AAAA_DDDD_0000_IIII_IIII
// AND   - 1110_000_0000_0_AAAA_DDDD_0000_0000_BBBB
// ORR   - 1110_000_1100_0_AAAA_DDDD_0000_0000_BBBB
// LDR   - 1110_010_1100_1_AAAA_DDDD_IIII_IIII_IIII
// STR   - 1110_010_1100_0_AAAA_DDDD_IIII_IIII_IIII
// COND_1010_IIII_IIII_IIII_IIII_IIII_IIII

// Equal            - COND = 0000 
// Not Equal        - COND = 0001 
// Greater or Equal - COND = 1010 
// Greater          - COND = 1100 
// Less or Equal    - COND = 1101 
// Less             - COND = 1011 

1110 000 0010 0 1111 0000 0000 0000 1111	//  MAIN	SUB  R0 R15 R15
1110 001 0100 0 0000 0001 0000 0000 0001	//  		ADD  R1 R0 #1
1110 000 1100 0 0000 0010 0000 0000 0001	//  		ORR  R2 R0 R1
1110 001 0100 0 0000 0010 0000 0000 0010	//  		ADD  R2 R0 #2
1110 001 0010 1 0010 0000 0000 0000 0000	//  		SUBS R0 R2 #0
0000 1010 0000 0000 0000 0000 0000 0001		//  		BEQ  TAG1
1110 000 0000 0 0010 0010 0000 0000 0000	//  		AND  R2 R2 R0
1110 000 0000 0 0010 0001 0000 0000 0000	//  		AND  R1 R2 R0
1110 000 0100 0 0001 1001 0000 0000 0000	//  TAG1	ADD  R9 R1 R0
1110 010 1100 0 0000 1001 0000 0000 1001	//  		STR  R9 [R0, #9]
1110 010 1100 1 0000 0011 0000 0000 1001	//  		LDR  R3 [R0, #9]
1110 000 0000 0 0011 0010 0000 0000 0010	//  		AND  R2 R3 R2