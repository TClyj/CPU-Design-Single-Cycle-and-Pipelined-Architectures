// ADD R - 1110_000_0100_0_AAAA_DDDD_0000_0000_BBBB
// ADD I - 1110_001_0100_0_AAAA_DDDD_0000_IIII_IIII
// SUB R - 1110_000_0010_0_AAAA_DDDD_0000_0000_BBBB
// SUB I - 1110_001_0010_0_AAAA_DDDD_0000_IIII_IIII
// CMP R - 1110_000_0010_1_AAAA_DDDD_0000_0000_BBBB
// CMP I - 1110_001_0010_1_AAAA_DDDD_0000_IIII_IIII
// AND   - 1110_000_0000_0_AAAA_DDDD_0000_0000_BBBB
// ORR   - 1110_000_1100_0_AAAA_DDDD_0000_0000_BBBB
// LDR   - 1110_010_1100_1_AAAA_DDDD_IIII_IIII_IIII
// STR   - 1110_010_1100_0_AAAA_DDDD_IIII_IIII_IIII
//COND_1010_IIII_IIII_IIII_IIII_IIII_IIII

// Equal            - COND = 0000 
// Not Equal        - COND = 0001 
// Greater or Equal - COND = 1010 
// Greater          - COND = 1100 
// Less or Equal    - COND = 1101 
// Less             - COND = 1011 


1110 001 0100 0 1111 0000 0000 0000 0000 // MAIN		ADD R0, R15, #0		    0
1110 000 0010 0 0000 0001 0000 0000 0000 // 		    SUB R1, R0, R0		    4
1110 001 0100 0 0001 0010 0000 0000 1010 // 		    ADD R2, R1, #10         8
1110 000 0100 0 0000 0011 0000 0000 0010 // 		    ADD R3, R0, R2		    12
1110 001 0010 0 0010 0100 0000 0000 0011 // 		    SUB R4, R2, #3		    16
1110 000 0010 0 0011 0101 0000 0000 0100 // 		    SUB R5, R3, R4		    20
1110 000 1100 0 0100 0110 0000 0000 0101 // 		    ORR R6, R4, R5		    24
1110 000 0000 0 0110 0111 0000 0000 0101 // 		    AND R7, R6, R5		    28
1110 010 1100 0 0001 0111 0000 0000 0000 // 		    STR R7, [R1, #0]	    32
1110 1010 0000 0000 0000 0000 0000 0001  // 		    B SKIP                  36
1110 010 1100 0 0001 0001 0000 0000 0000 // 		    STR R1, [R1, #0]        40
1110 1010 0000 0000 0000 0000 0000 0000  // 		    B LOOP	                44 
1110 010 1100 1 0001 1000 0000 0000 0000 // SKIP		LDR R8, [R1, #0]	    48
1110 001 0010 1 0110 1001 0000 0000 1111 // B_START     CMP R9, R6, #15         52  
0001 1010 1111 1111 1111 1111 1111 1101  //             BNE B_START             56  
1110 000 0010 1 0101 1001 0000 0000 0100 //             CMP R9, R5, R4          60
0001 1010 0000 0000 0000 0000 0000 0000  //             BNE BNE_TESTED          64  
1110 1010 1111 1111 1111 1111 1111 1010  //             B B_START               68  
1110 000 0010 1 0010 1001 0000 0000 0011 // BNE_TESTED  CMP R9, R2, R3          72
1010 1010 1111 1111 1111 1111 1111 1000  //             BGE B_START             76  
1110 000 0010 1 0011 1001 0000 0000 0010 //             CMP R9, R3, R2          80
1010 1010 0000 0000 0000 0000 0000 0000  //             BGE BGE_TESTED          84  
1110 1010 1111 1111 1111 1111 1111 0101  //             B B_START               88  
1110 000 0010 1 0011 1001 0000 0000 0010 // BGE_TESTED  CMP R9, R3, R2          92 
1101 1010 1111 1111 1111 1111 1111 0011  //             BLE B_START             96  
1110 000 0010 1 0010 1001 0000 0000 0011 //             CMP R9, R2, R3          100
1101 1010 0000 0000 0000 0000 0000 0000  //             BLE BLE_TESTED          104 
1110 1010 1111 1111 1111 1111 1111 0000  //             B B_START               108 
1110 001 0100 0 0001 1000 0000 0000 0001 // BLE_TESTED  ADD R8, R1, #1          112
1110 1010 1111 1111 1111 1111 1111 1110  // LOOP        B LOOP                  116